name: Create GCP Bucket with Workload Identity Federation

on:
  push:
    branches:
      - main

jobs:
  # create-bucket:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
      
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.1.0

  #     - name: print terraform vesion
  #       run: |
  #         terraform version

  #     - id: 'auth'
  #       name: Authenticate to GCP with Workload Identity Federation
  #       uses: google-github-actions/auth@v1
  #       with:
  #         #workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID }}
  #         project: 'githubprojectkranthi4'
  #         workload_identity_provider: 'projects/852645311860/locations/global/workloadIdentityPools/your-pool-id/providers/github-provider1'
  #         service_account: 'github-actions-sa@githubprojectkranthi4.iam.gserviceaccount.com'
  #     - name: Set up gcloud CLI
  #       uses: google-github-actions/setup-gcloud@v1

  #     - name: Print Attributes
  #       run: |
  #         echo "Id Token: ${{ steps.auth.outputs.id_token }}"
  #         echo "Context: ${{ toJson(github.context) }}"

  #     # - name: Set GCP Project
  #     #   #run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }} # Set the project
  #     #   run: gcloud config set project github-project-kranthi4 # Set the project

  #     - name: Create GCP Bucket
  #       run: |
  #         BUCKET_NAME="my-unique-bucket-${GITHUB_RUN_ID}"
  #         gsutil mb gs://${BUCKET_NAME} # Project is already set
  #         echo "Bucket created: gs://${BUCKET_NAME}"

  #     - name: Verify Bucket Creation (Optional)
  #       run: |
  #         gsutil ls gs://${BUCKET_NAME}
  job_id:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - id: 'auth'
      name: Authenticate to GCP with Workload Identity Federation
      uses: google-github-actions/auth@v1
      with:
          #workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_ID }}
          project: 'githubprojectkranthi4'
          workload_identity_provider: 'projects/852645311860/locations/global/workloadIdentityPools/your-pool-id/providers/github-provider1'
          service_account: 'github-actions-sa@githubprojectkranthi4.iam.gserviceaccount.com'

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: 'private-gke-cluster'
        location: 'us-central1-a'

    - name: connect to gke cluster
      run: |
          gcloud compute ssh instance-20250226-113647     --tunnel-through-iap     --project=githubprojectkranthi4     --zone=us-central1-c            --ssh-flag="-4 -L8888:localhost:8888 -N -q -f"
          export HTTPS_PROXY=localhost:8888
          kubectl get ns
          kubectl create deployment hello-world-deployment --image=nginx:latest --replicas=1 --port=80 -n sftpgo
          kubectl get deployment -n sftpgo
#To connect to private gke cluster using bastion host use https://cloud.google.com/kubernetes-engine/docs/tutorials/private-cluster-bastion


